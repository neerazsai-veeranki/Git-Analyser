html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    title GitHub Commits Scroll
    script(src="https://code.jquery.com/jquery-3.6.0.min.js")
    style.
      h3{
           padding: 20px;
           text-align: center;
      }
      body {
          font-family: Arial, sans-serif;
          background-color: #f0f0f0;
          margin: 0;
          padding: 0;
      }
    //-   #commits-list {
    //-       list-style: none;
    //-       padding: 0;
    //-       display: flex;
    //-       flex-wrap: wrap;
    //-       justify-content: center;
    //-   }
    //-   .portfolio-details {
    //-       background-color: #fff;
    //-       border-radius: 4px;
    //-       box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    //-       margin: 10px;
    //-       width: 200px;
    //-       padding: 10px;
    //-       text-align: center;
    //-   }
  body
    h3 Commits List 
      ul#commits-list
  
    script.
      $(document).ready(function () {
  
          var username = !{JSON.stringify(user)};
          let page = 1;
          const perPage = 50;
          let loading = false;
          let allcommitsLoaded = false;
          //- let username = user
          //- console.log(username)
  
          function createcommitsCard(commits) {
              return `
                  <div class="portfolio-details">
                      <div class="container">
                          <div class="row">
                              <div class="portfolio-info">
                                  <h3> Commit Details</h3>
                                  <p> In GitHub, a commit represents a snapshot of changes made to a repository at a specific point in time. It includes the modified files, the author's information, a commit message, and a unique identifier (commit hash) to track and reference the changes.</p>
                                  <p id = Commit ID> ${item.sha} </p>
                                  <p id = Commit Date>${item.commit.author.date} </p>
                                  <p id = Commit Message>${item.commit.message} </p>
                              </div>
                          </div>    
                      </div>
                  </div>
              `;
          }
  
          function fetchcommits() {
              if (loading || allcommitsLoaded) return;
              loading = true;
              console.log(username)
              
              $.get(`https://api.github.com/repos/ritwickdey/bgi-tech-fest-2k18/commits/6230773e9976bcfa5b810f91f4b7e00f7be1f58d?page=${page}&per_page=${perPage}`)
                  .done(function (data) {
                      if (data.length === 0) {
                          allcommitsLoaded = true;
                      } else {
                          data.forEach(function (commits) {
                              const cardHTML = createcommitsCard(commits);
                              $('#commits-list').append(cardHTML);
                          });
                          page++;
                      }
                      loading = false;
                  })
                  .fail(function (error) {
                      console.error('Error fetching data:', error);
                      loading = false;
                  });
          }
  
          $(window).scroll(function () {
              if ($(window).scrollTop() + $(window).height() >= $(document).height() - 100) {
                  fetchcommits();
              }
          });
  
          fetchcommits();
      });
  